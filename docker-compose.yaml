version: '3.3'
services:
  jenkins:
    image: jenkins/jenkins:lts
    restart: unless-stopped
    privileged: true
    user: root
    ports:
     - 8080:8080
     - 50000:50000
    container_name: jenkins
    volumes:
      - type: bind
        source: /docker_volume/jenkins
        target: /var/jenkins_home
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  sonarqube:
    user: 1004:1004
    image: sonarqube:community
    ports:
      - "9000:9000"
    restart: unless-stopped
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - type: bind
        source: /docker_volume/sonarqube/conf
        target: /opt/sonarqube/conf
      - type: bind
        source: /docker_volume/sonarqube/logs
        target: /opt/sonarqube/logs
      - type: bind  
        source: /docker_volume/sonarqube/temp
        target: /opt/sonarqube/temp
      - type: bind
        source: /docker_volume/sonarqube/data
        target: /opt/sonarqube/data
      - type: bind  
        source: /docker_volume/sonarqube/extensions
        target: /opt/sonarqube/extensions
      - type: bind  
        source: /docker_volume/sonarqube/bundled-plugins
        target: /opt/sonarqube/lib/bundled-plugins
      - type: bind  
        source: /docker_volume/sonarqube/common
        target: /opt/sonarqube/lib/common


  db:
    image: postgres:12    
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - type: bind
        source: /docker_volume/postgresql
        target: /var/lib/postgresql
      - type: bind  
        source: /docker_volume/postgresql/data
        target: /var/lib/postgresql/data